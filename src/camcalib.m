% Camera Calibration Script
% Most of this script is generated, but a few things were modified to make it 
% nicer to run. For example, a DEBUG flag was added so the script will not
% generate figures unless absolutely needed!


if exist('DEBUG', 'var') ~= 1
    DEBUG = true;
end

% Define images to process
imageFileNames = {'/home/atharva/RBE3001Code08/camera_calibration/Image11.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image12.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image13.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image14.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image24.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image25.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image26.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image31.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image34.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image4.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image44.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image45.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image46.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image47.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image48.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image49.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image50.png',...
    '/home/atharva/RBE3001Code08/camera_calibration/Image51.png',...
    };

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 25;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

if DEBUG
    
    % View reprojection errors
    h1=figure; showReprojectionErrors(cameraParams);

    % Visualize pattern locations
    h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

    % Display parameter estimation errors
    displayErrors(estimationErrors, cameraParams);
    
end
